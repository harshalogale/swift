///
/// @Generated by Mockolo
///



import Combine
import Foundation
@testable import ExchangeRate


class ERWebServicingMock: ERWebServicing {
    init() { }


    private(set) var fetchExchangeRatesCallCount = 0
    var fetchExchangeRatesHandler: ((String) -> (AnyPublisher<ExchangeRatesResponse?, Error>))?
    func fetchExchangeRates(for currencyCode: String) -> AnyPublisher<ExchangeRatesResponse?, Error> {
        fetchExchangeRatesCallCount += 1
        if let fetchExchangeRatesHandler = fetchExchangeRatesHandler {
            return fetchExchangeRatesHandler(currencyCode)
        }
        fatalError("fetchExchangeRatesHandler returns can't have a default value thus its handler must be set")
    }

    private(set) var fetchConversionRateCallCount = 0
    var fetchConversionRateHandler: ((String, String) -> (AnyPublisher<ConversionRateResponse?, Error>))?
    func fetchConversionRate(fromCurrency fromCode: String, toCurrency toCode: String) -> AnyPublisher<ConversionRateResponse?, Error> {
        fetchConversionRateCallCount += 1
        if let fetchConversionRateHandler = fetchConversionRateHandler {
            return fetchConversionRateHandler(fromCode, toCode)
        }
        fatalError("fetchConversionRateHandler returns can't have a default value thus its handler must be set")
    }
}

